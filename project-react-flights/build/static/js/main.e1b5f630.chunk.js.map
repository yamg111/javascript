{"version":3,"sources":["allActions.js","actions/user_actions.js","actions/vacations_actions.js","components/Login.js","components/VacationUser.js","components/VacationsUser.js","components/VacationAdmin.js","components/VacationsAdmin.js","App.js","serviceWorker.js","reducers/reducer_user.js","reducers/reducer_vacations.js","index.js"],"names":["allActions","user_actions","setUser","user","type","payload","getUser","vacations_actions","setVacations","getVactations","Login","props","useState","show","setShow","handleClose","usernames","setusernames","username","setusername","password","setpassword","dispatch","useDispatch","useForm","register","handleSubmit","useEffect","getAllUsers","a","async","fetch","method","credentials","data","console","log","json","userr","status","isAdmin","history","push","checkUser","className","Form","Group","controlId","Label","Control","onChange","e","target","value","placeholder","Text","Button","onClick","headers","body","JSON","stringify","alert","variant","Modal","onHide","Header","closeButton","Title","Body","name","ref","Footer","f_name","l_name","some","VacationUser","useSelector","state","follow","setFollow","str","setStr","vacation","id","getFollowers","checked","Card","Img","src","picture","desteny","description","moment","start","format","toString","ends","innerHTML","getVacations","VacationsUser","vacations","alt","map","key","Math","random","VacationAdmin","vacation_id","animation","defaultValue","price","VacationsAdmin","showR","setShowR","reports","setReports","handleCloseR","getReports","res","followers","size","width","height","strokeDasharray","dataKey","fill","App","path","component","Boolean","window","location","hostname","match","reducerUser","action","reducerVacations","allReducers","combineReducers","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e1b5f630.chunk.js","sourcesContent":["import vacations_actions from \"./actions/vacations_actions\"\r\nimport user_actions from \"./actions/user_actions\"\r\n\r\nconst allActions = {\r\n    user_actions,\r\n    vacations_actions\r\n}\r\n\r\nexport default allActions","const setUser=(user)=>{\r\n    return{\r\n        type:\"SET_USER\",\r\n        payload:user\r\n    }\r\n}\r\n\r\nconst getUser=()=>{\r\n    return{\r\n        type:\"GET_USER\"\r\n    }\r\n}\r\n\r\nexport default{\r\n    setUser,\r\n    getUser\r\n}","const setVacations=(user)=>{\r\n    return{\r\n        type:\"SET_VACATIONS\",\r\n        payload:user\r\n    }\r\n}\r\n\r\nconst getVactations=()=>{\r\n    return{\r\n        type:\"GET_VACATIONS\"\r\n    }\r\n}\r\n\r\nexport default{\r\n    setVacations,\r\n    getVactations\r\n}","\r\nimport { Form, Button, Modal } from 'react-bootstrap'\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport allActions from \"../allActions\"\r\nimport { useForm } from 'react-hook-form'\r\nconst Login = (props) => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false)\r\n  const handleShow = () => setShow(true);\r\n  const [usernames, setusernames] = useState([])\r\n  const [username, setusername] = useState(\"\")\r\n  const [password, setpassword] = useState(\"\")\r\n  const dispatch = useDispatch()\r\n  const { register, handleSubmit } = useForm()\r\n\r\n  useEffect(() => {\r\n    getAllUsers()\r\n    const checkUser = async () => {\r\n      let data = await fetch(\"http://localhost:3000/users/login\", { method: 'GET', credentials: 'include' })\r\n      console.log(data);\r\n      let userr = await data.json()\r\n      if (data.status == 200) {\r\n        const json = await fetch(`http://localhost:3000/users/login/${userr}`)\r\n        const isAdmin = await json.json()\r\n        console.log(\"loggedin\");\r\n        dispatch(allActions.user_actions.setUser([userr, isAdmin]))\r\n        if (isAdmin == 0) {\r\n          \r\n          props.history.push(\"/vacationsuser\")\r\n        } else {\r\n          props.history.push(\"/vacationadmin\")\r\n        }\r\n      }\r\n    }\r\n    \r\n    checkUser();\r\n\r\n\r\n  }, []);\r\n\r\n// getting usernames for chacking for duplicated usernames \r\nconst getAllUsers=async()=>{\r\n  const json= await fetch(\"http://localhost:3000/users/usernames\")\r\n  const data= await json.json()\r\n  console.log(data);\r\n  setusernames(data)\r\n}\r\n\r\n   // data from form\r\n   let onSubmit = async data => {\r\n    if (data.f_name && data.l_name && data.username && data.password ) {\r\n       const exist=usernames.some(user=>user.username==`${data.username}`)\r\n      if(exist==true) {\r\n         alert(\"username already exict\")\r\n       } else {\r\n      const json = await fetch(\"http://localhost:3000/users/register\", {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ data })\r\n      })\r\n      if (json.status == 200) {\r\n        console.log(\"yay\");\r\n      } else {\r\n        console.log(\"yak\");\r\n      }\r\n    }\r\n  }else{\r\n    alert(\"you have some empty fileds\")\r\n  }\r\n}\r\n\r\n\r\n  const submitRequest = async () => {\r\n    // set state\r\n    let data = await fetch(\"http://localhost:3000/users/login\", {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ username, password })\r\n    })\r\n    // try to login\r\n    if (data.status == 200) {\r\n      const json = await fetch(`http://localhost:3000/users/login/${username}`)\r\n      const isAdmin = await json.json()\r\n      console.log(\"loggedin\");\r\n      dispatch(allActions.user_actions.setUser([username, isAdmin]))\r\n\r\n      if (isAdmin == 0) {\r\n\r\n        props.history.push(\"/vacationsuser\")\r\n      } else {\r\n        props.history.push(\"/vacationadmin\")\r\n      }\r\n    } else {\r\n      alert(\"username or password does not exist ! please try again or register :)\")\r\n    }\r\n    // redirect to vacations\r\n  }\r\n\r\n\r\n  // registration\r\n\r\n  return (\r\n    <div className=\"loginDiv\">\r\n      <div className=\"loginTitle\">\r\n        <h1>Welcome to my flights.com !</h1>\r\n      </div>\r\n      <div className=\"styling\">\r\n\r\n        <div className=\"formDiv\">\r\n\r\n          <Form>\r\n            <div className=\"insideForm\">\r\n\r\n              <Form.Group controlId=\"formBasic\">\r\n                <Form.Label>username</Form.Label>\r\n                <Form.Control onChange={(e) => { setusername(e.target.value) }} className=\"input1\" type=\"text\" placeholder=\"Enter username\" />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control onChange={(e) => { setpassword(e.target.value) }} className=\"input1\" type=\"password\" placeholder=\"Password\" />\r\n              </Form.Group>\r\n              <Form.Text className=\"text-muted\">\r\n                don't have an account ? press \"Register\" and let's get started !\r\n    </Form.Text>\r\n              <Button onClick={submitRequest} className=\"btnSub\" variant=\"outline-primary\" type=\"button\">\r\n                login\r\n  </Button>\r\n              <Button onClick={handleShow} className=\"btnSub\" variant=\"outline-secondary\" type=\"button\">\r\n                Register\r\n  </Button>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n\r\n        <Modal className=\"modalForAll\" show={show} onHide={handleClose}>\r\n          <div className=\"modalInsideForAll\">\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Registration</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body><Form>\r\n              <Form.Group controlId=\"formBasic\">\r\n                <div>\r\n                  <Form.Label className=\"inputPos1\" >First name :</Form.Label>\r\n                  <Form.Label className=\"inputPos2\">Last name  :</Form.Label>\r\n                </div>\r\n                <Form.Control className=\"input2\" type=\"input\" placeholder=\"first name\" name=\"f_name\" ref={register} />\r\n                <Form.Control className=\"input3\" type=\"input\" placeholder=\"last name\" name=\"l_name\" ref={register} />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasic\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control type=\"input\" placeholder=\"Enter username\" name=\"username\" ref={register} />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" ref={register} />\r\n              </Form.Group>\r\n\r\n            </Form></Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleClose}>\r\n                Close\r\n          </Button>\r\n              <Button type=\"submit\" variant=\"primary\" onClick={handleSubmit(onSubmit)}>\r\n                Save Changes\r\n          </Button>\r\n            </Modal.Footer>\r\n\r\n          </div>\r\n        </Modal>\r\n\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Login;\r\n\r\n\r\n","\r\nimport {useSelector } from 'react-redux'\r\nimport React, { useState,useEffect } from 'react';\r\nimport {Button,Card } from 'react-bootstrap'\r\nimport moment from 'moment';\r\nimport 'moment-timezone';\r\nconst VacationUser = (props) => {\r\n  const username = useSelector(state=>state.username)\r\n  const [follow,setFollow]=useState(false) \r\n  const[str,setStr]=useState(\"\")\r\n    const vacation_id=props.vacation.id\r\n    \r\n    useEffect(() => {\r\n      getFollowers(props.vacation.id)\r\n    }, []);\r\n    \r\n    const getFollowers=async()=>{\r\n      //if currenct vacation is with follow by user\r\n      \r\n      const json= await fetch(`http://localhost:3000/followers/${username[0]}/${props.vacation.id}`)  \r\n      const data= await json.json()\r\n      console.log(data);\r\n      if(data==0){\r\n        setFollow(false)\r\n        setStr(\"follow\")\r\n      }else{\r\n        setFollow(true)\r\n        setStr(\"unfollow\")\r\n      }\r\n      \r\n    }\r\n    \r\n    \r\n\r\n    let checked=()=>{\r\n      //  chacking if user is following\r\n      if(follow){\r\n        setStr(\"follow\")\r\n      }else{\r\n        setStr(\"unfollow\")\r\n      }\r\n      console.log(str)\r\n    }\r\n    \r\n       \r\n     let newFollow=async()=>{\r\n       const json= await fetch(`http://localhost:3000/followers/${username[0]}/${props.vacation.id}`,{\r\n         method:\"POST\",\r\n         headers: {'Content-Type':'application/json'}\r\n        })\r\n        checked()\r\n        props.getVacations()\r\n      }\r\n\r\n      let deleteFollow=async()=>{\r\n        const json= await fetch(`http://localhost:3000/followers/${username[0]}/${props.vacation.id}`,{method:\"DELETE\"})\r\n        if(json.status==200){\r\n        }else{\r\n          console.log(\"didnt work\");\r\n        }\r\n        checked()\r\n        props.getVacations()\r\n      } \r\n      \r\n    return (\r\n        <div >\r\n           \r\n            <Card className=\"userCard\" id ={props.vacation.id}>\r\n                    \r\n                    <Card.Img className=\"imgCard\" variant=\"top\" src={props.vacation.picture}/>\r\n                    <Card.Title className=\"cardTitle\">{props.vacation.desteny}</Card.Title>\r\n                    <Card.Body>\r\n                    <Card.Text>\r\n                   <span className=\"cardText\"> description: </span><span className=\"informationCard\"> {props.vacation.description}</span>\r\n                    </Card.Text>\r\n                    <Card.Text>\r\n                    <span className=\"cardText\">flight date and time: </span><span className=\"informationCard\"> {moment(props.vacation.start).format(\"DD/MM/YYYY\").toString()}</span>\r\n                    </Card.Text>\r\n                    <Card.Text>\r\n                      <span className=\"cardText\">flight returns: </span><span className=\"informationCard\"> {moment(props.vacation.ends).format(\"DD/MM/YYYY\").toString()}</span>\r\n                    </Card.Text>                   \r\n                    <Button className=\"buttonFollow\" variant=\"primary\" onClick={(e)=>{\r\n                      if(e.target.innerHTML==\"follow\"){\r\n                        newFollow()\r\n                      }else{\r\n                        deleteFollow()\r\n                      }\r\n                      setFollow(!follow)}\r\n                    }>{str}</Button>\r\n  </Card.Body>\r\n</Card>\r\n                    \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VacationUser;\r\n","import React, { useState, useEffect } from 'react';\r\nimport VacationUser from './VacationUser';\r\nimport { useSelector,useDispatch } from 'react-redux'\r\nimport allActions from \"../allActions\"\r\nconst VacationsUser = (props) => {\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        const checkUser = async()=>{\r\n            \r\n            let data= await fetch(\"http://localhost:3000/users/login\",{method:'GET',credentials:'include'}) \r\n            console.log(data);\r\n            let userr= await data.json()\r\n            if(data.status==200){\r\n                const json= await fetch(`http://localhost:3000/users/login/${userr}`)\r\n              const isAdmin= await json.json()\r\n              console.log(\"loggedin\");\r\n              dispatch(allActions.user_actions.setUser([userr,isAdmin]))\r\n              \r\n             if(isAdmin==0){    \r\n                 props.history.push(\"/vacationsuser\")\r\n                } else{\r\n                    props.history.push(\"/vacationadmin\")\r\n                }\r\n            }\r\n        }\r\n        checkUser();   \r\n        getVacations()\r\n    }, []);\r\n    const username = useSelector(state => state.username)\r\n    const [vacations, setVacations] = useState([])\r\n\r\n\r\n\r\n    const getVacations = async () => {\r\n        try {\r\n            const json = await fetch(`http://localhost:3000/vacations/username/${username[0]}`, { method: 'GET', headers: { 'Content-Type': 'application/json' } })\r\n            const data = await json.json()\r\n            console.log(data);\r\n            if (json.status == 200) {\r\n                console.log(\"userpage connected\");\r\n                setVacations(data)\r\n            } else {\r\n                console.log(\"userpage is not connected\");\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    // function for counting followers\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"userList\" >\r\n            <div className=\"titleUser\">\r\n                <span className=\"title1\">V</span><span className=\"title2\">A</span> <span className=\"title3\">C</span> <span className=\"title4\">A</span> <span className=\"title5\">T</span> <span className=\"title6\">I</span> <span className=\"title7\">O</span> <span className=\"title8\">N</span> <span className=\"title9\">S</span>\r\n            </div>\r\n            <div className=\"divSide\">\r\n                <span className=\"heyName\">\r\n\r\n                    hey {username[0]}\r\n                </span>\r\n                we hope you enjoy our site !\r\n              <div>\r\n                    <img src=\"https://cdn.pixabay.com/photo/2016/04/01/22/55/countries-1301799_960_720.png\" className=\"imgDivSide\" alt=\"jckf\" />\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"divSide2\">\r\n                <span className=\"heyName\">\r\n                    Liked the site ?\r\n                </span>\r\n                tell your friends about us !\r\n                  <div>\r\n                    <img src=\"https://cdn.pixabay.com/photo/2016/04/01/23/21/cooperation-1301850_960_720.png\" className=\"imgDivSide\" alt=\"jckf\" />\r\n                </div>\r\n            </div>\r\n        \r\n                <div className=\"divSide3\">\r\n              <div>\r\n                    <img src=\"https://cdn2.iconfinder.com/data/icons/geest-travel-kit/128/travel_journey-12-512.png\" className=\"imgDivSide\" alt=\"jckf\" />\r\n                </div>\r\n                </div>\r\n                <div className=\"divSide4\">\r\n              <div>\r\n                    <img src=\"https://cdn2.iconfinder.com/data/icons/geest-travel-kit/128/travel_journey-16-512.png\" className=\"imgDivSide\" alt=\"jckf\" />\r\n                </div> \r\n                </div>\r\n            \r\n            <div>\r\n                {vacations.map(\r\n                    (vacation =>\r\n\r\n                        <VacationUser getVacations={getVacations} key={Math.random() * 100} vacation={vacation} />)\r\n\r\n\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VacationsUser;\r\n","import {useSelector} from 'react-redux'\r\nimport React, { useState,useEffect } from 'react';\r\nimport {Form,Modal,Button,Card } from 'react-bootstrap'\r\nimport moment from 'moment';\r\nimport 'moment-timezone';\r\nimport { useForm } from 'react-hook-form'\r\n\r\nconst VacationAdmin = (props) => {\r\n    const username = useSelector(state=>state.username) \r\n      const vacation_id=props.vacation.id\r\n       const vacation =props.vacation\r\n      const [show, setShow] = useState(false);\r\nconst handleClose = () => setShow(false);\r\n      const handleShow = () => setShow(true);\r\n      const { register, handleSubmit} = useForm()\r\n\r\n      let onSubmit =async data => {\r\n        if(data){\r\n            console.log(data);\r\n            const json= await fetch(`http://localhost:3000/vacations/${vacation_id}`,{\r\n              method:'PUT',  \r\n              headers: { 'Content-Type': 'application/json' },\r\n              body:JSON.stringify(data)\r\n            })\r\n            if(json.status==200){\r\n              console.log(\"yay\");\r\n            }else{\r\n              console.log(\"yak\");\r\n            } \r\n          }\r\n        }\r\n    \r\n    // const [chacked,setChacked]=useState((\"follow\"):(\"unfollow\"))\r\n      \r\n      useEffect(() => {\r\n       \r\n      }, []);\r\n    \r\n\r\n      const deleteVC=async()=>{\r\n          const js= await fetch(`http://localhost:3000/followers/${vacation_id}`,{method:\"DELETE\"})\r\n          if(js.status==200){\r\n\r\n              const json= await fetch(`http://localhost:3000/vacations/${vacation_id}`,{method:\"DELETE\"})\r\n              if(json.status==200){\r\n                  console.log(\"deleted !\");\r\n                }\r\n        }\r\n      }\r\n      const updateVC=async()=>{\r\n          const json=await fetch(`http://localhost:3000/vacations/${vacation_id}`,{method:\"put\", headers: { 'Content-Type': 'application/json' },\r\n        body:\"\"\r\n        })\r\n        if(json.status==200){\r\n            console.log(\"updated\");\r\n        }    \r\n      }\r\n      \r\n  \r\n      return (\r\n          <div >\r\n          \r\n              <Card className=\"userCard\" id ={props.vacation.id}>\r\n                      \r\n                      <Card.Img className=\"imgCard\" variant=\"top\" src={props.vacation.picture}/>\r\n                      <Card.Title className=\"cardTitle\">{props.vacation.desteny}</Card.Title>\r\n                     <span>\r\n                     <img onClick={handleShow} className=\"btnEddit\" src=\"https://image.flaticon.com/icons/png/512/1160/1160758.png\"/>\r\n              {/* modal eddit starts------------------------------------------------------ */}\r\n                     \r\n                     <Modal className=\"modalForAll\"  show={show} onHide={handleClose} animation={false}>\r\n                     <div className=\"modalInsideForAll\">\r\n\r\n                     <Modal.Header closeButton>\r\n                       <Modal.Title>Updating Modal </Modal.Title>\r\n                   </Modal.Header>\r\n                   <Modal.Body>\r\n                   <Form>\r\n              <Form.Group controlId=\"formBasic\">\r\n                <div>\r\n                  <Form.Label className=\"inputPos1\">desteny :</Form.Label>\r\n                  <Form.Label className=\"inputPos2\">description  :</Form.Label>\r\n                </div>\r\n                <Form.Control name=\"desteny\" ref={register} className=\"input2\" type=\"input\" defaultValue={vacation.desteny}/>\r\n                <Form.Control name=\"description\" ref={register} className=\"input3\" type=\"input\" defaultValue={vacation.description} />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasic\">\r\n                <Form.Label>picture:</Form.Label>\r\n                <Form.Control name=\"picture\" ref={register} type=\"input\"defaultValue={vacation.picture} />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>flight date</Form.Label>\r\n                \r\n               <input name=\"start\" ref={register} type=\"date\"  value={moment(props.vacation.ends).format(\"YYYY-MM-DD\").toString()}/>\r\n               \r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>flight date returns</Form.Label>\r\n                \r\n             <input name=\"ends\" ref={register}  type=\"date\" value={moment(props.vacation.ends).format(\"YYYY-MM-DD\")} /> \r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasic\">\r\n                <div>\r\n                  <Form.Label>price :</Form.Label>\r\n                  <Form.Control className=\"input2\" type=\"input\"  name=\"price\" ref={register}  defaultValue={vacation.price}/>\r\n\r\n                </div>\r\n              </Form.Group>\r\n            </Form>\r\n                   </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button  variant=\"primary\" onClick={handleSubmit(onSubmit)}>\r\n            Save Changes\r\n          </Button>\r\n          <Button  variant=\"primary\" onClick={props.handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n                     </div>\r\n      </Modal>\r\n                      <img className=\"btnEddit\" src=\"https://image.flaticon.com/icons/png/512/1621/premium/1621152.png\" onClick={deleteVC}/>\r\n                      </span>\r\n                      <Card.Body>\r\n                      <Card.Text>\r\n                     <span className=\"cardText\"> description: </span><span className=\"informationCard\"> {props.vacation.description}</span>\r\n                      </Card.Text>\r\n                      <Card.Text>\r\n                      <span className=\"cardText\">flight date: </span><span className=\"informationCard\"> {moment(props.vacation.start).format(\"DD/MM/YYYY\").toString()}</span>\r\n                      </Card.Text>\r\n                      <Card.Text>\r\n                        <span className=\"cardText\">flight returns: </span><span className=\"informationCard\"> {moment(props.vacation.ends).format(\"DD/MM/YYYY\").toString()}</span>\r\n                      </Card.Text>                   \r\n            \r\n    </Card.Body>\r\n  </Card>\r\n                      \r\n          </div>\r\n      );\r\n}\r\n\r\nexport default VacationAdmin;\r\n","import React, { useState, useEffect } from 'react';\r\nimport VacationAdmin from './VacationAdmin';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {Form,Modal,Button,Nav } from 'react-bootstrap'\r\nimport { useForm } from 'react-hook-form'\r\nimport { LabelList,BarChart, Bar, XAxis, YAxis, Tooltip, CartesianGrid, Legend,Line } from 'recharts';\r\nimport allActions from \"../allActions\"\r\nconst VacationsAdmin = (props) => {\r\n  const username = useSelector(state => state.username)\r\n  const [vacations, setVacations] = useState([])\r\n  const { register, handleSubmit} = useForm()\r\n  const [show, setShow] = useState(false);\r\n  const [showR, setShowR] = useState(false);\r\n  const [reports,setReports]=useState([])\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const handleCloseR = () => setShowR(false);\r\n  const handleShowR = () => setShowR(true);\r\n  const dispatch = useDispatch()\r\n\r\n     useEffect(() => {\r\n       const checkUser = async()=>{    \r\n         let data= await fetch(\"http://localhost:3000/users/login\",{method:'GET',credentials:'include'}) \r\n         console.log(data);\r\n         let userr= await data.json()\r\n         if(data.status==200){\r\n            const json= await fetch(`http://localhost:3000/users/login/${userr}`)\r\n            const isAdmin= await json.json()\r\n            console.log(\"loggedin\");\r\n            dispatch(allActions.user_actions.setUser([userr,isAdmin]))    \r\n           if(isAdmin==0){\r\n             props.history.push(\"/vacationsuser\")\r\n            } else{\r\n              props.history.push(\"/vacationadmin\")\r\n           }\r\n          }\r\n        }\r\n        checkUser();\r\n        getVacations()\r\n        getReports()   \r\n    }, []);\r\n\r\n\r\n    // Modal info for adding new vacation\r\n    let onSubmit =async (data) => {\r\n      console.log(data);\r\n        if(data.desteny&&data.description&&data.picture&& data.start && data.ends && data.price){\r\n            console.log(data);\r\n            const json= await fetch(\"http://localhost:3000/vacations\",{\r\n              method:'POST',  \r\n              headers: { 'Content-Type': 'application/json' },\r\n              body:JSON.stringify(data)\r\n            })\r\n            if(json.status==200){\r\n              console.log(\"yay\");\r\n            }else{\r\n              console.log(\"yak\");\r\n            } \r\n          }else{\r\n            alert(\"one of your fileds are empty\" )\r\n          }\r\n        }\r\n        // data for carchar\r\n      \r\n    const getVacations = async (userr) => {\r\n        try {\r\n          console.log(username);\r\n            const json = await fetch(`http://localhost:3000/vacations/username/${userr}`, { method: 'GET', headers: { 'Content-Type': 'application/json' } })\r\n            const data = await json.json()\r\n            if (json.status == 200) {\r\n                console.log(\"userpage connected\");\r\n                setVacations(data)\r\n            } else {\r\n                console.log(\"userpage is not connected\");\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    \r\n    const getReports=async()=>{\r\n      try{\r\n        const json= await fetch(\"http://localhost:3000/followers\",{method:'GET'})\r\n        const res=await json.json()\r\n        console.log(res[0].followers);\r\n        if(res){\r\n          setReports(res)\r\n        \r\n      }else{\r\n        console.log(\"reports faild\");\r\n      }\r\n    }catch (err){\r\n      console.log(err);\r\n\r\n    }\r\n}\r\n\r\n    // function for counting followers\r\n       \r\n    return (\r\n        <div className=\"adminList\" >\r\n            <div className=\"titleUser\">\r\n                <span className=\"title1\">V</span><span className=\"title2\">A</span> <span className=\"title3\">C</span> <span className=\"title4\">A</span> <span className=\"title5\">T</span> <span className=\"title6\">I</span> <span className=\"title7\">O</span> <span className=\"title8\">N</span> <span className=\"title9\">S</span>\r\n            </div>\r\n            <div className=\"addBtnRepBtn\">\r\n            <Button onClick={handleShow} className=\"buttonAdmin\">add</Button>\r\n            <div className=\"modalDiv\">\r\n          <Modal className=\"modalForAll\" show={show} onHide={handleClose}>\r\n            <div className=\"modalInsideForAll\">\r\n\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>new flight</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body><Form>\r\n              <Form.Group controlId=\"formBasic\">\r\n                <div>\r\n                  <Form.Label className=\"inputPos1\" >desteny :</Form.Label>\r\n                  <Form.Label className=\"inputPos2\">description  :</Form.Label>\r\n                </div>\r\n                <Form.Control className=\"input2\" type=\"input\" placeholder=\"desteny\" name=\"desteny\" ref={register}/>\r\n                <Form.Control className=\"input3\" type=\"input\" placeholder=\"description\" name=\"description\" ref={register}/>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasic\">\r\n                <Form.Label>picture</Form.Label>\r\n                <Form.Control type=\"input\" placeholder=\"Enter picture url\"  name=\"picture\" ref={register}/>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>flight start</Form.Label>\r\n                <Form.Control type=\"date\"  name=\"start\" ref={register}/>\r\n                <Form.Label>flight returns</Form.Label>\r\n                <Form.Control type=\"date\"  name=\"ends\" ref={register}/>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <div>\r\n                  <Form.Label>price :</Form.Label>\r\n                  <Form.Control className=\"input2\" type=\"input\"  name=\"price\" ref={register}/>\r\n\r\n                </div>\r\n              \r\n              </Form.Group>\r\n             \r\n            </Form></Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleClose}>\r\n                Close\r\n          </Button>\r\n              <Button type=\"submit\" variant=\"primary\" onClick={ handleSubmit(onSubmit)}>\r\n              Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n            </div>\r\n      </Modal>\r\n      \r\n     </div>   \r\n            <Button onClick={handleShowR} className=\"buttonAdmin\">reports</Button>\r\n            <Modal className=\"modalForAll\" size=\"lg\" show={showR} onHide={handleCloseR}>\r\n       <div className=\"modalInsideForAll\">\r\n\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body> \r\n           <BarChart width={600} height={250} data={reports}>\r\n  <CartesianGrid strokeDasharray=\"4 4\" />\r\n  <XAxis dataKey=\"desteny\" />\r\n  <YAxis  />\r\n  <Tooltip /> \r\n  <Legend />\r\n  <Bar dataKey=\"followers\" fill=\"#8884d8\" />\r\n</BarChart></Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleCloseR}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" >\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n       </div>\r\n      </Modal>\r\n      </div>\r\n            <div className=\"divSide\">\r\n                <span className=\"heyName\">\r\n\r\n                    hey {username[0]}\r\n                </span>\r\n                we hope you enjoy our site !\r\n              <div>\r\n                    <img src=\"https://cdn.pixabay.com/photo/2016/04/01/22/55/countries-1301799_960_720.png\" className=\"imgDivSide\" alt=\"jckf\" />\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"divSide2\">\r\n                <span className=\"heyName\">\r\n                    Liked the site ?\r\n                </span>\r\n                tell your friends about us !\r\n                  <div>\r\n                    <img src=\"https://cdn.pixabay.com/photo/2016/04/01/23/21/cooperation-1301850_960_720.png\" className=\"imgDivSide\" alt=\"jckf\" />\r\n                </div>\r\n            </div>\r\n        \r\n                <div className=\"divSide3\">\r\n              <div>\r\n                    <img src=\"https://cdn2.iconfinder.com/data/icons/geest-travel-kit/128/travel_journey-12-512.png\" className=\"imgDivSide\" alt=\"jckf\" />\r\n                </div>\r\n                </div>\r\n                <div className=\"divSide4\">\r\n              <div>\r\n                    <img src=\"https://cdn2.iconfinder.com/data/icons/geest-travel-kit/128/travel_journey-16-512.png\" className=\"imgDivSide\" alt=\"jckf\" />\r\n                </div>\r\n                </div>\r\n            \r\n            <div>\r\n               \r\n                {vacations.map(\r\n                    (vacation =>\r\n\r\n                        <VacationAdmin getVacations={getVacations} key={Math.random() * 100} vacation={vacation} />)\r\n\r\n\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default VacationsAdmin;\r\n","import React from 'react';\nimport './App.css';\nimport {useSelector,useDispatch} from \"react-redux\"\nimport Login from './components/Login';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport VacationsUser from './components/VacationsUser';\nimport VacationsAdmin from './components/VacationsAdmin';\nfunction App() {\n  const user = useSelector(state=>state.user)\n \n  return (\n      <Router>\n    <div className=\"App\">\n\n     <Switch>\n       <Route path=\"/login\" component={Login}/>\n       <Route path='/vacationsuser' component={VacationsUser}/>\n       <Route path='/vacationadmin' component={VacationsAdmin}/>\n       <Route path=\"/\" component={Login}/>\n     </Switch>\n      \n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const reducerUser=(state=[\"\",0], action)=>{\r\n    switch (action.type){\r\n        case \"SET_USER\" :\r\n             state=action.payload\r\n             return state\r\n        case \"GET_USER\" :\r\n            return state \r\n\r\n        default :\r\n        return state\r\n\r\n    }\r\n}\r\n\r\nexport default reducerUser","\r\nconst reducerVacations=(state=[], action)=>{\r\n    switch (action.type){\r\n        case \"SET_VACATIONS\" :\r\n             state=action.payload\r\n             return state\r\n             case \"GET_VACATIONS\" :\r\n                 return state\r\n               default :\r\n        return state\r\n    }\r\n}\r\n\r\nexport default reducerVacations","import React, { useReducer } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore,combineReducers} from \"redux\"\nimport {Provider} from \"react-redux\"\nimport reducerUser from \"./reducers/reducer_user\"\nimport reducerVacations from \"./reducers/reducer_vacations\"\nimport allActions from \"./allActions\"\nconst allReducers=combineReducers({\n    username:reducerUser,\n    vacations:reducerVacations\n})\n\n\nconst store=createStore(allReducers)\n\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}